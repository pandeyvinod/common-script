## this script will finds the if the buckets has read and write permission and will tell in on stdout. though you can modify the script and colelct the output

Last login: Thu Jun 17 12:23:16 on ttys002
[oh-my-zsh] Insecure completion-dependent directories detected:
drwxrwxr-x  3 vinod  admin  96 Jun 16 16:56 /usr/local/share/zsh
drwxrwxr-x  3 vinod  admin  96 Jun 16 17:00 /usr/local/share/zsh/site-functions

[oh-my-zsh] For safety, we will not load completions from these directories until
[oh-my-zsh] you fix their permissions and ownership and restart zsh.
[oh-my-zsh] See the above list for directories with group or other writability.

[oh-my-zsh] To fix your permissions you can do so by disabling
[oh-my-zsh] the write permission of "group" and "others" and making sure that the
[oh-my-zsh] owner of these directories is either root or your current user.
[oh-my-zsh] The following command may help:
[oh-my-zsh]     compaudit | xargs chmod g-w,o-w

[oh-my-zsh] If the above didn't help or you want to skip the verification of
[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to
[oh-my-zsh] "true" before oh-my-zsh is sourced in your zshrc file.

➜  tmp git:(main) ✗ 
➜  tmp git:(main) ✗ cd
➜  ~ clear














➜  ~ 
➜  ~ 
➜  ~ kubectl get all 
NAME                READY   STATUS      RESTARTS   AGE
pod/configmap-pod   1/1     Running     5          7d1h
pod/pv-recycler     0/1     Completed   0          6d23h
pod/test-pd         1/1     Running     2          7d

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   7d3h
➜  ~ cd Documents/github-code/K8S 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ ls -l 
total 32
-rw-r--r--  1 vinod  staff  390 Jun 10 11:56 configmap-as-volume.yaml
-rw-r--r--  1 vinod  staff  277 Jun 10 12:30 emptydir.yaml
-rw-r--r--  1 vinod  staff  251 Jun 10 12:30 emptydir2.yaml
-rw-r--r--  1 vinod  staff  454 Jun 10 13:50 recycle.yaml
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ code mangodb-deployment.yaml 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ cat ~/.zshrc
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/vinod/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
                                                                                                                                               
➜  K8S git:(main) ✗ 
                                                                                                                                               
➜  K8S git:(main) ✗ 
                                                                                                                                               
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ clear

➜  K8S git:(main) ✗ vim ~/.zshrc
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ source ~/.zshrc
[oh-my-zsh] Insecure completion-dependent directories detected:
drwxrwxr-x  3 vinod  admin  96 Jun 16 16:56 /usr/local/share/zsh
drwxrwxr-x  3 vinod  admin  96 Jun 16 17:00 /usr/local/share/zsh/site-functions

[oh-my-zsh] For safety, we will not load completions from these directories until
[oh-my-zsh] you fix their permissions and ownership and restart zsh.
[oh-my-zsh] See the above list for directories with group or other writability.

[oh-my-zsh] To fix your permissions you can do so by disabling
[oh-my-zsh] the write permission of "group" and "others" and making sure that the
[oh-my-zsh] owner of these directories is either root or your current user.
[oh-my-zsh] The following command may help:
[oh-my-zsh]     compaudit | xargs chmod g-w,o-w

[oh-my-zsh] If the above didn't help or you want to skip the verification of
[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to
[oh-my-zsh] "true" before oh-my-zsh is sourced in your zshrc file.

➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create secret help   
error: unknown command "help"
See 'kubectl create secret -h' for help and examples
➜  K8S git:(main) ✗ k create secret --help 
Create a secret using specified subcommand.

Available Commands:
  docker-registry Create a secret for use with a Docker registry
  generic         Create a secret from a local file, directory or literal value
  tls             Create a TLS secret

Usage:
  kubectl create secret [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create secret generic --help
Create a secret based on a file, directory, or specified literal value.

 A single secret may package one or more key/value pairs.

 When creating a secret based on a file, the key will default to the basename of the file, and the value will default to
the file content. If the basename is an invalid key or you wish to chose your own, you may specify an alternate key.

 When creating a secret based on a directory, each file whose basename is a valid key in the directory will be packaged
into the secret. Any directory entries except regular files are ignored (e.g. subdirectories, symlinks, devices, pipes,
etc).

Examples:
  # Create a new secret named my-secret with keys for each file in folder bar
  kubectl create secret generic my-secret --from-file=path/to/bar
  
  # Create a new secret named my-secret with specified keys instead of names on disk
  kubectl create secret generic my-secret --from-file=ssh-privatekey=path/to/id_rsa
--from-file=ssh-publickey=path/to/id_rsa.pub
  
  # Create a new secret named my-secret with key1=supersecret and key2=topsecret
  kubectl create secret generic my-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
  
  # Create a new secret named my-secret using a combination of a file and a literal
  kubectl create secret generic my-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
  
  # Create a new secret named my-secret from an env file
  kubectl create secret generic my-secret --from-env-file=path/to/bar.env

Options:
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in
the template. Only applies to golang and jsonpath output formats.
      --append-hash=false: Append a hash of the secret to its name.
      --dry-run='none': Must be "none", "server", or "client". If client strategy, only print the object that would be
sent, without sending it. If server strategy, submit server-side request without persisting the resource.
      --field-manager='kubectl-create': Name of the manager used to track field ownership.
      --from-env-file='': Specify the path to a file to read lines of key=val pairs to create a secret (i.e. a Docker
.env file).
      --from-file=[]: Key files can be specified using their file path, in which case a default name will be given to
them, or optionally with a name and file path, in which case the given name will be used.  Specifying a directory will
iterate each named file in the directory that is a valid secret key.
      --from-literal=[]: Specify a key and literal value to insert in secret (i.e. mykey=somevalue)
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the
annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.
      --show-managed-fields=false: If true, keep the managedFields when printing objects in JSON or YAML format.
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The
template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
      --type='': The type of secret to create
      --validate=true: If true, use a schema to validate the input before sending it

Usage:
  kubectl create secret generic NAME [--type=string] [--from-file=[key=]source] [--from-literal=key1=value1]
[--dry-run=server|client|none] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create secret generic --from-literal=key1=hello --from-literal key2=hello --dry-run=client -o yaml > 3.yaml 
error: exactly one NAME is required, got 0
See 'kubectl create secret generic -h' for help and examples
➜  K8S git:(main) ✗ k create secret generic --from-literal=key1=hello --from-literal key2=hello --dry-run=client -o yaml > 3.yaml
error: exactly one NAME is required, got 0
See 'kubectl create secret generic -h' for help and examples
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create secret generic --from-literal=key1=hello --from-literal=key2=hello --dry-run=client -o yaml > 3.yaml
error: exactly one NAME is required, got 0
See 'kubectl create secret generic -h' for help and examples
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ echo -n "username" | base64 
dXNlcm5hbWU=
➜  K8S git:(main) ✗ echo -n "password" | base64 
cGFzc3dvcmQ=
➜  K8S git:(main) ✗ ls -l 
total 40
-rw-r--r--  1 vinod  staff    0 Jun 17 13:39 3.yaml
-rw-r--r--  1 vinod  staff  390 Jun 10 11:56 configmap-as-volume.yaml
-rw-r--r--  1 vinod  staff  277 Jun 10 12:30 emptydir.yaml
-rw-r--r--  1 vinod  staff  251 Jun 10 12:30 emptydir2.yaml
-rw-r--r--  1 vinod  staff  954 Jun 17 13:47 mangodb-deployment.yaml
-rw-r--r--  1 vinod  staff  454 Jun 10 13:50 recycle.yaml
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ vim mangodb-deployment.yaml 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ kubectl create -f mangodb-deployment.yaml 
secret/mangodb-secret created
deployment.apps/mangodb-deployment created
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get secrets 
NAME                  TYPE                                  DATA   AGE
default-token-tgppk   kubernetes.io/service-account-token   3      7d3h
mangodb-secret        Opaque                                2      6s
➜  K8S git:(main) ✗ k get deployments.apps 
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           12s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           14s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           16s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           19s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           21s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           23s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           24s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           25s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           29s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           30s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           32s
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS             RESTARTS   AGE
configmap-pod                         1/1     Running            6          7d1h
mangodb-deployment-858dc57b97-czqjq   0/1     ImagePullBackOff   0          41s
pv-recycler                           0/1     Completed          0          6d23h
test-pd                               1/1     Running            2          7d1h
➜  K8S git:(main) ✗ k describe pods mangodb-deployment-858dc57b97-czqjq 
Name:           mangodb-deployment-858dc57b97-czqjq
Namespace:      default
Priority:       0
Node:           docker-desktop/192.168.65.4
Start Time:     Thu, 17 Jun 2021 13:48:00 +0530
Labels:         app=mangodb
                pod-template-hash=858dc57b97
Annotations:    <none>
Status:         Pending
IP:             
IPs:            <none>
Controlled By:  ReplicaSet/mangodb-deployment-858dc57b97
Containers:
  mangodb:
    Container ID:   
    Image:          mango
    Image ID:       
    Port:           27017/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       ErrImagePull
    Ready:          False
    Restart Count:  0
    Environment:
      MONGO_INITDB_ROOT_USERNAME:  <set to the key 'mangodb-root-username' in secret 'mangodb-secret'>  Optional: false
      MONGO_INITDB_ROOT_PASSWORD:  <set to the key 'mangodb-root-password' in secret 'mangodb-secret'>  Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-tgppk (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  default-token-tgppk:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-tgppk
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason          Age                From               Message
  ----     ------          ----               ----               -------
  Normal   Scheduled       54s                default-scheduler  Successfully assigned default/mangodb-deployment-858dc57b97-czqjq to docker-desktop
  Normal   Pulling         34s (x2 over 52s)  kubelet            Pulling image "mango"
  Warning  Failed          30s (x2 over 47s)  kubelet            Failed to pull image "mango": rpc error: code = Unknown desc = Error response from daemon: pull access denied for mango, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
  Warning  Failed          30s (x2 over 47s)  kubelet            Error: ErrImagePull
  Normal   SandboxChanged  17s (x7 over 46s)  kubelet            Pod sandbox changed, it will be killed and re-created.
  Normal   BackOff         13s (x6 over 42s)  kubelet            Back-off pulling image "mango"
  Warning  Failed          13s (x6 over 42s)  kubelet            Error: ImagePullBackOff
➜  K8S git:(main) ✗ docker login
Authenticating with existing credentials...
Login Succeeded
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k delete deployments.apps mangodb-deployment 
deployment.apps "mangodb-deployment" deleted
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml 
deployment.apps/mangodb-deployment created
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get deployments.apps 
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           12s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           15s
➜  K8S git:(main) ✗ k get deployments.apps
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           19s
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS             RESTARTS   AGE
configmap-pod                         1/1     Running            6          7d1h
mangodb-deployment-858dc57b97-qrchg   0/1     ImagePullBackOff   0          24s
pv-recycler                           0/1     Completed          0          7d
test-pd                               1/1     Running            2          7d1h
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k describe pods mangodb-deployment-858dc57b97-qrchg 
Name:           mangodb-deployment-858dc57b97-qrchg
Namespace:      default
Priority:       0
Node:           docker-desktop/192.168.65.4
Start Time:     Thu, 17 Jun 2021 13:49:59 +0530
Labels:         app=mangodb
                pod-template-hash=858dc57b97
Annotations:    <none>
Status:         Pending
IP:             
IPs:            <none>
Controlled By:  ReplicaSet/mangodb-deployment-858dc57b97
Containers:
  mangodb:
    Container ID:   
    Image:          mango
    Image ID:       
    Port:           27017/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       ImagePullBackOff
    Ready:          False
    Restart Count:  0
    Environment:
      MONGO_INITDB_ROOT_USERNAME:  <set to the key 'mangodb-root-username' in secret 'mangodb-secret'>  Optional: false
      MONGO_INITDB_ROOT_PASSWORD:  <set to the key 'mangodb-root-password' in secret 'mangodb-secret'>  Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-tgppk (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  default-token-tgppk:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-tgppk
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason          Age                From               Message
  ----     ------          ----               ----               -------
  Normal   Scheduled       31s                default-scheduler  Successfully assigned default/mangodb-deployment-858dc57b97-qrchg to docker-desktop
  Normal   Pulling         11s (x2 over 29s)  kubelet            Pulling image "mango"
  Warning  Failed          7s (x2 over 24s)   kubelet            Failed to pull image "mango": rpc error: code = Unknown desc = Error response from daemon: pull access denied for mango, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
  Warning  Failed          7s (x2 over 24s)   kubelet            Error: ErrImagePull
  Normal   SandboxChanged  2s (x5 over 23s)   kubelet            Pod sandbox changed, it will be killed and re-created.
  Normal   BackOff         2s (x3 over 19s)   kubelet            Back-off pulling image "mango"
  Warning  Failed          2s (x3 over 19s)   kubelet            Error: ImagePullBackOff
➜  K8S git:(main) ✗ k delete deployments.apps mangodb-deployment 
deployment.apps "mangodb-deployment" deleted
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ vim mangodb-deployment.yaml 
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml                
deployment.apps/mangodb-deployment created
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          4s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          7s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get deployments.apps 
NAME                 READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment   0/1     1            0           11s
➜  K8S git:(main) ✗ k get pods            
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          14s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          16s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          17s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          42s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get pods
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          43s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get pods --watch 
NAME                                  READY   STATUS              RESTARTS   AGE
configmap-pod                         1/1     Running             6          7d1h
mangodb-deployment-6c7f57c7c5-k75cg   0/1     ContainerCreating   0          51s
pv-recycler                           0/1     Completed           0          7d
test-pd                               1/1     Running             2          7d1h
q
:
:q
cc


:
:mangodb-deployment-6c7f57c7c5-k75cg   1/1     Running             0          66s
q
:q
:q1
:exit
cd^C%                                                                                                                                                         ➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ clear

➜  K8S git:(main) ✗ k get pods 
NAME                                  READY   STATUS      RESTARTS   AGE
configmap-pod                         1/1     Running     6          7d2h
mangodb-deployment-6c7f57c7c5-k75cg   1/1     Running     0          5m57s
pv-recycler                           0/1     Completed   0          7d
test-pd                               1/1     Running     2          7d1h
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ ls -l 
total 40
-rw-r--r--  1 vinod  staff    0 Jun 17 13:39 3.yaml
-rw-r--r--  1 vinod  staff  390 Jun 10 11:56 configmap-as-volume.yaml
-rw-r--r--  1 vinod  staff  277 Jun 10 12:30 emptydir.yaml
-rw-r--r--  1 vinod  staff  251 Jun 10 12:30 emptydir2.yaml
-rw-r--r--  1 vinod  staff  954 Jun 17 13:51 mangodb-deployment.yaml
-rw-r--r--  1 vinod  staff  454 Jun 10 13:50 recycle.yaml
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml 
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mangodb-deployment" already exists
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml
service/mongodb-service created
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mangodb-deployment" already exists
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get svc 
NAME              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE
kubernetes        ClusterIP   10.96.0.1        <none>        443/TCP     7d3h
mongodb-service   ClusterIP   10.110.212.179   <none>        27017/TCP   4s
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k describe svc mongodb-service 
Name:              mongodb-service
Namespace:         default
Labels:            <none>
Annotations:       <none>
Selector:          app=mangodb
Type:              ClusterIP
IP Families:       <none>
IP:                10.110.212.179
IPs:               <none>
Port:              <unset>  27017/TCP
TargetPort:        27017/TCP
Endpoints:         10.1.0.64:27017
Session Affinity:  None
Events:            <none>
➜  K8S git:(main) ✗ k get pods -o wide
NAME                                  READY   STATUS      RESTARTS   AGE     IP          NODE             NOMINATED NODE   READINESS GATES
configmap-pod                         1/1     Running     6          7d2h    10.1.0.24   docker-desktop   <none>           <none>
mangodb-deployment-6c7f57c7c5-k75cg   1/1     Running     0          6m49s   10.1.0.64   docker-desktop   <none>           <none>
pv-recycler                           0/1     Completed   0          7d      10.1.0.17   docker-desktop   <none>           <none>
test-pd                               1/1     Running     2          7d1h    10.1.0.25   docker-desktop   <none>           <none>
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get nodes
NAME             STATUS   ROLES    AGE    VERSION
docker-desktop   Ready    master   7d3h   v1.19.7
➜  K8S git:(main) ✗ k get nodes -0 wide
Error: unknown shorthand flag: '0' in -0
See 'kubectl get --help' for usage.
➜  K8S git:(main) ✗ k get nodes -o wide
NAME             STATUS   ROLES    AGE    VERSION   INTERNAL-IP    EXTERNAL-IP   OS-IMAGE         KERNEL-VERSION     CONTAINER-RUNTIME
docker-desktop   Ready    master   7d3h   v1.19.7   192.168.65.4   <none>        Docker Desktop   5.10.25-linuxkit   docker://20.10.7
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ ipconfig 
usage: ipconfig <command> <args>
where <command> is one of waitall, getifaddr, ifcount, getoption, getpacket, getv6packet, getra, set, setverbose
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ ifconfig
lo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> mtu 16384
	options=1203<RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP>
	inet 127.0.0.1 netmask 0xff000000 
	inet6 ::1 prefixlen 128 
	inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 
	nd6 options=201<PERFORMNUD,DAD>
gif0: flags=8010<POINTOPOINT,MULTICAST> mtu 1280
stf0: flags=0<> mtu 1280
en3: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	ether ac:de:48:00:11:22 
	inet6 fe80::aede:48ff:fe00:1122%en3 prefixlen 64 scopeid 0x4 
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect (100baseTX <full-duplex>)
	status: active
ap1: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether a6:83:e7:9f:a8:85 
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect
	status: inactive
en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether a4:83:e7:9f:a8:85 
	inet6 fe80::37:13fc:2e7c:493f%en0 prefixlen 64 secured scopeid 0x6 
	inet6 2405:201:d006:60b1:1820:1bb:be5f:c64 prefixlen 64 autoconf secured 
	inet6 2405:201:d006:60b1:59aa:2f26:22f4:790c prefixlen 64 autoconf temporary 
	inet 192.168.29.170 netmask 0xffffff00 broadcast 192.168.29.255
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect
	status: active
awdl0: flags=8943<UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether ca:5c:3f:58:20:e0 
	inet6 fe80::c85c:3fff:fe58:20e0%awdl0 prefixlen 64 scopeid 0x7 
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect
	status: active
llw0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether ca:5c:3f:58:20:e0 
	inet6 fe80::c85c:3fff:fe58:20e0%llw0 prefixlen 64 scopeid 0x8 
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect
	status: active
en1: flags=8963<UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500
	options=460<TSO4,TSO6,CHANNEL_IO>
	ether 82:45:4a:89:34:01 
	media: autoselect <full-duplex>
	status: inactive
en2: flags=8963<UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500
	options=460<TSO4,TSO6,CHANNEL_IO>
	ether 82:45:4a:89:34:00 
	media: autoselect <full-duplex>
	status: inactive
bridge0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=63<RXCSUM,TXCSUM,TSO4,TSO6>
	ether 82:45:4a:89:34:01 
	Configuration:
		id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0
		maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200
		root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0
		ipfilter disabled flags 0x0
	member: en1 flags=3<LEARNING,DISCOVER>
	        ifmaxaddr 0 port 9 priority 0 path cost 0
	member: en2 flags=3<LEARNING,DISCOVER>
	        ifmaxaddr 0 port 10 priority 0 path cost 0
	nd6 options=201<PERFORMNUD,DAD>
	media: <unknown type>
	status: inactive
utun0: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
	inet6 fe80::d60d:27ad:117:123d%utun0 prefixlen 64 scopeid 0xc 
	nd6 options=201<PERFORMNUD,DAD>
utun1: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 2000
	inet6 fe80::97bb:8a1:4a97:ea90%utun1 prefixlen 64 scopeid 0xd 
	nd6 options=201<PERFORMNUD,DAD>
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml 
configmap/mongodb-configmap created
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mangodb-deployment" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": services "mongodb-service" already exists
error validating "mangodb-deployment.yaml": error validating data: [ValidationError(Deployment.spec.template.spec.containers[0].env[2].valueFrom.configMapKeyRef): unknown field "value" in io.k8s.api.core.v1.ConfigMapKeySelector, ValidationError(Deployment.spec.template.spec.containers[0].env[2].valueFrom.configMapKeyRef): missing required field "key" in io.k8s.api.core.v1.ConfigMapKeySelector]; if you choose to ignore these errors, turn validation off with --validate=false
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml
deployment.apps/mongo-express-deployment created
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mangodb-deployment" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": services "mongodb-service" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": configmaps "mongodb-configmap" already exists
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get pods
NAME                                       READY   STATUS              RESTARTS   AGE
configmap-pod                              1/1     Running             6          7d2h
mangodb-deployment-6c7f57c7c5-k75cg        1/1     Running             0          22m
mongo-express-deployment-9788649f4-ggqp8   0/1     ContainerCreating   0          6s
pv-recycler                                0/1     Completed           0          7d
test-pd                                    1/1     Running             2          7d1h
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get deployments.apps 
NAME                       READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment         1/1     1            1           22m
mongo-express-deployment   0/1     1            0           12s
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get pods
NAME                                       READY   STATUS              RESTARTS   AGE
configmap-pod                              1/1     Running             6          7d2h
mangodb-deployment-6c7f57c7c5-k75cg        1/1     Running             0          22m
mongo-express-deployment-9788649f4-ggqp8   0/1     ContainerCreating   0          17s
pv-recycler                                0/1     Completed           0          7d
test-pd                                    1/1     Running             2          7d1h
➜  K8S git:(main) ✗ k get pods
NAME                                       READY   STATUS      RESTARTS   AGE
configmap-pod                              1/1     Running     6          7d2h
mangodb-deployment-6c7f57c7c5-k75cg        1/1     Running     0          23m
mongo-express-deployment-9788649f4-ggqp8   1/1     Running     0          55s
pv-recycler                                0/1     Completed   0          7d
test-pd                                    1/1     Running     2          7d1h
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k logs mongo-express-deployment-9788649f4-ggqp8 
Waiting for mongodb-service:27017...
Welcome to mongo-express
------------------------


Mongo Express server listening at http://0.0.0.0:8081
Server is open to allow connections from anyone (0.0.0.0)
basicAuth credentials are "admin:pass", it is recommended you change this in your config.js!
Database connected
Admin Database connected
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml 
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mangodb-deployment" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": services "mongodb-service" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": configmaps "mongodb-configmap" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mongo-express-deployment" already exists
Error from server (Invalid): error when creating "mangodb-deployment.yaml": Service "mongo-express-service" is invalid: spec.type: Unsupported value: "loadBalancer": supported values: "ClusterIP", "ExternalName", "LoadBalancer", "NodePort"
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k create -f mangodb-deployment.yaml
service/mongo-express-service created
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": secrets "mangodb-secret" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mangodb-deployment" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": services "mongodb-service" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": configmaps "mongodb-configmap" already exists
Error from server (AlreadyExists): error when creating "mangodb-deployment.yaml": deployments.apps "mongo-express-deployment" already exists
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get pods
NAME                                       READY   STATUS      RESTARTS   AGE
configmap-pod                              1/1     Running     6          7d2h
mangodb-deployment-6c7f57c7c5-k75cg        1/1     Running     0          28m
mongo-express-deployment-9788649f4-ggqp8   1/1     Running     0          5m51s
pv-recycler                                0/1     Completed   0          7d
test-pd                                    1/1     Running     2          7d1h
➜  K8S git:(main) ✗ k get svc 
NAME                    TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
kubernetes              ClusterIP      10.96.0.1        <none>        443/TCP          7d3h
mongo-express-service   LoadBalancer   10.108.148.148   localhost     8081:30000/TCP   9s
mongodb-service         ClusterIP      10.110.212.179   <none>        27017/TCP        21m
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ curl localhost:3000 
curl: (7) Failed to connect to localhost port 3000: Connection refused
➜  K8S git:(main) ✗ curl localhost:8081 
<!DOCTYPE html>
<html lang="en">
<head>
  <base href="/">
  <meta charset="utf-8">
  <title>Home - Mongo Express</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link href="/public/css/bootstrap.min.css" rel="stylesheet">
  <link href="/public/css/bootstrap-theme.min.css" rel="stylesheet">
  <link href="/public/css/style.css" rel="stylesheet" />

  <link rel="prefetch" href="/public/img/gears.gif">

  <style type="text/css">
    body {
      padding-top: 60px;
      padding-bottom: 40px;
    }
    .sidebar-nav {
      padding: 9px 0;
    }
    .sidebar-nav a {
      display: inline-block;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
    }
    .tooltip-inner {
      max-width: 500px;
    }
  </style>

  
</head>

<body>

<nav class="navbar navbar-default navbar-fixed-top">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <div class="logo-nav">
        <a href="/">
          <img src="/public/img/mongo-express-logo.png" />
        </a>
      </div>
      <a class="navbar-brand" href="">Mongo Express</a>
    </div>
    <div id="navbar" class="navbar-collapse collapse">
      <ul class="nav navbar-nav">
        
  <li class="dropdown">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Database<span class="caret"></span></a>
    <ul class="dropdown-menu">
      
      <li><a href="/db/admin/">admin</a></li>
      
      <li><a href="/db/config/">config</a></li>
      
      <li><a href="/db/local/">local</a></li>
      
    </ul>
  </li>

      </ul>
    </div><!--/.nav-collapse -->
  </div>
</nav>


<div class="container">
  <div class="row">
    <div class="col-md-12">
      <div class="page-header main-title">
        <h1 id="pageTitle">Mongo Express</h1>
      </div>

      

      

    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      
<div class="panel panel-default">
  <div class="panel-heading">
    <div style="display: inline-block;">
      <h4 style="font-weight: bold;">Databases</h4>
    </div>
    
    <form class="form-inline" method="POST" style="float:right;">
      <div class="input-group">
        <input class="form-control" type="text" id="database" name="database" placeholder="Database Name" title="Database Name">
        <span class="input-group-btn">
          <button type="submit" class="btn btn-primary pull-right">
            <span class="glyphicon glyphicon-plus"></span>
            Create Database
          </button>
        </span>
      </div>
    </form>
    
    </div>
  <div class="panel-body no-padding">
<table class="table table-bordered table-striped table-condensed no-margin">
  
  <tr>
    <td class="col-md-2">
      <a href="/db/admin/" class="btn btn-success btn-block" >
        <span class="glyphicon glyphicon-eye-open"></span><br>View
      </a>
    </td>
    <td><h3><a href="/db/admin/">admin</a></h3></td>
    
    <td class="col-md-2">
      <form method="POST" action="/admin" style="margin: 0px;">
        <input type="hidden" name="_method" value="delete">
        <button type="submit" class="hidden"></button>
        <button type="button" class="btn btn-danger btn-block deleteButton" database-name="admin" >
          <span class="glyphicon glyphicon-trash"></span><br>Del
        </button>
      </form>
    </td>
    
  </tr>
  
  <tr>
    <td class="col-md-2">
      <a href="/db/config/" class="btn btn-success btn-block" >
        <span class="glyphicon glyphicon-eye-open"></span><br>View
      </a>
    </td>
    <td><h3><a href="/db/config/">config</a></h3></td>
    
    <td class="col-md-2">
      <form method="POST" action="/config" style="margin: 0px;">
        <input type="hidden" name="_method" value="delete">
        <button type="submit" class="hidden"></button>
        <button type="button" class="btn btn-danger btn-block deleteButton" database-name="config" >
          <span class="glyphicon glyphicon-trash"></span><br>Del
        </button>
      </form>
    </td>
    
  </tr>
  
  <tr>
    <td class="col-md-2">
      <a href="/db/local/" class="btn btn-success btn-block" >
        <span class="glyphicon glyphicon-eye-open"></span><br>View
      </a>
    </td>
    <td><h3><a href="/db/local/">local</a></h3></td>
    
    <td class="col-md-2">
      <form method="POST" action="/local" style="margin: 0px;">
        <input type="hidden" name="_method" value="delete">
        <button type="submit" class="hidden"></button>
        <button type="button" class="btn btn-danger btn-block deleteButton" database-name="local" >
          <span class="glyphicon glyphicon-trash"></span><br>Del
        </button>
      </form>
    </td>
    
  </tr>
  
</table>
</div>
  </div>

<div id="confirm-deletion" class="modal fade" role="dialog" aria-labelledby="confirmDeletionLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">

      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Delete database</h4>
      </div>

      <div class="modal-body">
        <p>
          Be careful! You are about to delete whole <strong><span id="modal-database-name"></span></strong> database.
        </p>
        <p>
          <label for="confirmation-input">Type the database name to proceed.</label>
          <input type="text" id="confirmation-input" name="confirmation-input" shouldbe="" value="" />
        </p>
      </div>

      <div class="modal-footer">
        <button type="button" data-dismiss="modal" class="btn btn btn-danger" id="delete">Delete</button>
        <button type="button" data-dismiss="modal" class="btn">Cancel</button>
      </div>
    </div>
  </div>
</div>

<!--h2>Create Database</h2>
<form class="well form-inline" method="POST">
    <div class="form-group">
      <input class="input-medium" type="text" id="database" name="database" placeholder="Database Name" title="Database Name">
    </div>
    <button type="submit" class="btn btn-primary pull-right">
      <span class="glyphicon glyphicon-plus"></span>
      Create Database
    </button>
</form-->



<div class="panel panel-default stats">
  <div class="panel-heading">
    <h4 style="font-weight: bold;">Server Status</h4>
  </div>
<table class="table table-bordered table-striped">
  <tr>
    <td class="span2"><strong>Hostname</strong></td>
    <td class="span3" id="dbHost">mangodb-deployment-6c7f57c7c5-k75cg</td>
    <td class="span2"><strong>MongoDB Version</strong></td>
    <td class="span3" id="dbVersion">4.4.6</td>
  </tr>
  <tr>
    <td><strong>Uptime</strong></td>
    <td>1846 seconds </td>
    <td><strong>Server Time</strong></td>
    <td>Thu, 17 Jun 2021 08:53:41 GMT</td>
  </tr>
  <tr><td colspan="4">&nbsp;</td></tr>
  <tr>
    <td><strong>Current Connections</strong></td>
    <td>3</td>
    <td><strong>Available Connections</strong></td>
    <td>838857</td>
  </tr>
  <tr>
    <td><strong>Active Clients</strong></td>
    <td>0</td>
    <td><strong>Queued Operations</strong></td>
    <td>0</td>
  </tr>
  <tr>
    <td><strong>Clients Reading</strong></td>
    <td>0</td>
    <td><strong>Clients Writing</strong></td>
    <td>0</td>
  </tr>
  <tr>
    <td><strong>Read Lock Queue</strong></td>
    <td>0</td>
    <td><strong>Write Lock Queue</strong></td>
    <td>0</td>
  </tr>
  <tr><td colspan="4">&nbsp;</td></tr>
  <tr>
    <td><strong>Disk Flushes</strong></td>
    <td></td>
    <td><strong>Last Flush</strong></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>Time Spent Flushing</strong></td>
    <td> ms</td>
    <td><strong>Average Flush Time</strong></td>
    <td> ms</td>
  </tr>
  <tr><td colspan="4">&nbsp;</td></tr>
  <tr>
    <td><strong>Total Inserts</strong></td>
    <td>0</td>
    <td><strong>Total Queries</strong></td>
    <td>8</td>
  </tr>
  <tr>
    <td><strong>Total Updates</strong></td>
    <td>0</td>
    <td><strong>Total Deletes</strong></td>
    <td>0</td>
  </tr>
</table>
</div>





    </div>
  </div>
</div>

<script src="/public/vendor-a6502aaae055f01bdcc3.min.js"></script>
<script type="text/javascript">
'use strict';
window.ME_SETTINGS = {
  readOnly: 'false' === 'true',
  codeMirrorEditorTheme: '',
  baseHref: '/',
  collapsibleJSON: 'true' === 'true',
  collapsibleJSONDefaultUnfold: parseInt('1', 10),
  confirmDelete: 'false' === 'true',
  dbName: '',
  collectionName: '',
  bucketName: ''
};
</script>


<script src="/public/index-0d94eb863f41a0adfbe0.min.js"></script>


</body>
</html>
➜  K8S git:(main) ✗ k get pods
NAME                                       READY   STATUS      RESTARTS   AGE
configmap-pod                              1/1     Running     6          7d2h
mangodb-deployment-6c7f57c7c5-k75cg        1/1     Running     0          48m
mongo-express-deployment-9788649f4-ggqp8   1/1     Running     0          26m
pv-recycler                                0/1     Completed   0          7d
test-pd                                    1/1     Running     2          7d2h
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get svc 
NAME                    TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
kubernetes              ClusterIP      10.96.0.1        <none>        443/TCP          7d4h
mongo-express-service   LoadBalancer   10.108.148.148   localhost     8081:30000/TCP   20m
mongodb-service         ClusterIP      10.110.212.179   <none>        27017/TCP        42m
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ k get deployments.apps 
NAME                       READY   UP-TO-DATE   AVAILABLE   AGE
mangodb-deployment         1/1     1            1           48m
mongo-express-deployment   1/1     1            1           26m
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ working and working 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ git status 
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	.mangodb.yaml.swp
	3.yaml
	mangodb-deployment.yaml

nothing added to commit but untracked files present (use "git add" to track)
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ git add .
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ git commit -m "mongodb-express-services" . 
[main 6bd4fce] mongodb-express-services
 3 files changed, 132 insertions(+)
 create mode 100644 K8S/.mangodb.yaml.swp
 create mode 100644 K8S/3.yaml
 create mode 100644 K8S/mangodb-deployment.yaml
➜  K8S git:(main) 
➜  K8S git:(main) 
➜  K8S git:(main) git status                                 
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
➜  K8S git:(main) git push                                   
Enumerating objects: 13, done.
Counting objects: 100% (13/13), done.
Delta compression using up to 8 threads
Compressing objects: 100% (9/9), done.
Writing objects: 100% (10/10), 2.00 KiB | 2.00 MiB/s, done.
Total 10 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 1 local object.
To https://github.com/pandeyvinod/personal.git
   33ccae7..6bd4fce  main -> main
➜  K8S git:(main) 
➜  K8S git:(main)  ls -l 
total 40
-rw-r--r--  1 vinod  staff     0 Jun 17 13:39 3.yaml
-rw-r--r--  1 vinod  staff   390 Jun 10 11:56 configmap-as-volume.yaml
-rw-r--r--  1 vinod  staff   277 Jun 10 12:30 emptydir.yaml
-rw-r--r--  1 vinod  staff   251 Jun 10 12:30 emptydir2.yaml
-rw-r--r--  1 vinod  staff  2680 Jun 17 14:19 mangodb-deployment.yaml
-rw-r--r--  1 vinod  staff   454 Jun 10 13:50 recycle.yaml
➜  K8S git:(main) vim 3.yaml 
➜  K8S git:(main) 
➜  K8S git:(main) rm -f 3.yaml 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ aws s3api get-public-access-block --bucket $s3_buckets  --output json | jq '.PublicAccessBlockConfiguration.RestrictPublicBuckets
pipe quote> `
pipe quote> 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ aws s3api get-public-access-block --bucket $s3_buckets  --output json | jq '.PublicAccessBlockConfiguration.RestrictPublicBuckets'
`
bquote> 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ aws s3api get-public-access-block --bucket $s3_buckets  --output json                                                             
`
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ aws s3 ls
2021-05-06 14:26:06 cf-templates-hj1c3helgmef-us-east-1
2021-05-28 20:23:38 image-thumbnail-dev-serverlessdeploymentbucket-wg4s068841ee
➜  K8S git:(main) ✗ aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1  --output json | jq '.PublicAccessBlockConfiguration.RestrictPublicBuckets'
`
bquote> aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1   --output json                         
`
false
zsh: command not found: {
➜  K8S git:(main) ✗ aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1  --output json | jq '.PublicAccessBlockConfiguration.RestrictPublicBuckets'
`
aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1   --output json
`
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗  aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1 
                                                                                                                                                              
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗  aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1 --output json
                                                                                                                                                              
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗  aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1 --output json                                      
                                                                                                                                                              
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗  aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1 --output yaml 
                                                                                                                                                              
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗  aws s3api get-public-access-block --bucket cf-templates-hj1c3helgmef-us-east-1 --output yaml
➜  K8S git:(main) ✗ aws s3api get-bucket-acl --bucket cf-templates-hj1c3helgmef-us-east-1 
➜  K8S git:(main) ✗ aws s3api get-bucket-acl --bucket cf-templates-hj1c3helgmef-us-east-1 --output json 
➜  K8S git:(main) ✗ aws s3api get-bucket-analytics-configuration  --bucket cf-templates-hj1c3helgmef-us-east-1 --output json 

usage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]
To see help text, you can run:

  aws help
  aws <command> help
  aws <command> <subcommand> help

aws: error: the following arguments are required: --id

➜  K8S git:(main) ✗ aws s3api get-bucket-analytics-configuration  --bucket cf-templates-hj1c3h➜  K8S git:(main) ✗ aws s3api get-bucket-analytics-configuration  --bucket cf-templates-hj1c3helgmef-us-east-1 --output json

usage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]
To see help text, you can run:

  aws help
  aws <command> help
  aws <command> <subcommand> help

aws: error: the following arguments are required: --id

➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ ls -l 
total 40
-rw-r--r--  1 vinod  staff   390 Jun 10 11:56 configmap-as-volume.yaml
-rw-r--r--  1 vinod  staff   277 Jun 10 12:30 emptydir.yaml
-rw-r--r--  1 vinod  staff   251 Jun 10 12:30 emptydir2.yaml
-rw-r--r--  1 vinod  staff  2680 Jun 17 14:19 mangodb-deployment.yaml
-rw-r--r--  1 vinod  staff   454 Jun 10 13:50 recycle.yaml
➜  K8S git:(main) ✗ 
➜  K8S git:(main) ✗ pw
zsh: command not found: pw
➜  K8S git:(main) ✗ pwd
/Users/vinod/Documents/github-code/K8S
➜  K8S git:(main) ✗ cd ..
➜  github-code git:(main) ✗ ls -l 
total 0
drwxr-xr-x   9 vinod  staff  288 Jun 17 11:01 Cloudformation-example
drwxr-xr-x   8 vinod  staff  256 Jun 17 11:11 Docker-example
drwxr-xr-x   8 vinod  staff  256 Jun 17 14:43 K8S
drwxr-xr-x   9 vinod  staff  288 May  4 19:29 bash-example
drwxr-xr-x   7 vinod  staff  224 Jun 17 11:01 lambda
drwxr-xr-x  14 vinod  staff  448 Jun  1 18:07 python-code-example
drwxr-xr-x   7 vinod  staff  224 Jun 17 17:43 tmp
➜  github-code git:(main) ✗ cd tmp 
➜  tmp git:(main) ✗ ls -l  
total 24
-rw-r--r--  1 vinod  staff  3392 Jun 16 17:42 bucket.py
-rwxr-xr-x  1 vinod  staff   442 Jun 17 11:59 list-public-private-s3buckets.sh
-rwxr-xr-x  1 vinod  staff  1874 Jun 17 17:02 s3-buckets.sh
➜  tmp git:(main) ✗ 
➜  tmp git:(main) ✗ vim s3-buckets.sh 
➜  tmp git:(main) ✗ 
➜  tmp git:(main) ✗ vim list-public-private-s3buckets.sh 
➜  tmp git:(main) ✗ 
➜  tmp git:(main) ✗ vim s3-buckets.sh 

list-public-private-s3buckets#!/usr/bin/env bash

# DescribePublicBuckets
# A script using the AWS CLI to determine if any S3 buckets in your account are using Public ACLs.
#

# If you haven't updated your AWS CLI in a while and installed it through pip, go ahead and update it now.
#pip install --user --upgrade awscli

# List out all the buckets you have, store the results in a variable.
BUCKETS_LIST=(`aws s3api list-buckets --output text | grep BUCKETS | cut -f3`)
PUBLIC_READ_BUCKETS=()
PUBLIC_WRITE_BUCKETS=()

for BUCKET_NAME in "${BUCKETS_LIST[@]}"; do
  # Describe this bucket's ACLs. If there is a "GRANTS READ" line that is followed by a
  # "GRANTEE Group http://acs.amazonaws.com/groups/global/AllUsers" line, this means Everyone has read access
  # to the bucket.
  # Checks for the same group being present with "GRANTS WRITE".

  PUBLIC_ACL_INDICATOR="http://acs.amazonaws.com/groups/global/AllUsers"
  printf "%s\n" "Checking Bucket ${BUCKET_NAME}:"

  if echo `aws s3api get-bucket-acl --output text --bucket ${BUCKET_NAME} | grep -A1 READ` | grep -q "${PUBLIC_ACL_INDICATOR}"
    then
      printf "%s\n" "Bucket ${BUCKET_NAME} allows Everyone to list its objects!"
      PUBLIC_READ_BUCKETS+=(${BUCKET_NAME})
    else
      printf "%s\n" "No public read access detected."
  fi

  if echo `aws s3api get-bucket-acl --output text --bucket ${BUCKET_NAME} | grep -A1 WRITE` | grep -q "${PUBLIC_ACL_INDICATOR}"
    then
      printf "%s\n" "Bucket ${BUCKET_NAME} allows Everyone to write objects!"
      PUBLIC_WRITE_BUCKETS+=(${BUCKET_NAME})
    else
      printf "%s\n" "No public write access detected."
  fi

  printf "%s\n" "----"
done

printf "%s\n" ""
printf "%s\n" "Buckets with READ permission issues (if any):"

### Credit goes to someone else. script is written by someone else.###
